#!/bin/bash
#SBATCH --partition=3090_risk
#SBATCH --nodelist=aisurrey15
#SBATCH --job-name=gptq_debug
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --gpus-per-node=1
#SBATCH --cpus-per-task=8
#SBATCH --time=12:00:00
#SBATCH --mem=64G
#SBATCH --output=output.log
#SBATCH --error=error.log

echo "🔧 开始 DEBUG 检查..." >> output.log
echo "👤 用户: $(whoami)" >> output.log
echo "📡 主机: $(hostname)" >> output.log
echo "📂 当前路径: $(pwd)" >> output.log
echo "🗂 当前目录内容:" >> output.log
ls -alh "$SLURM_SUBMIT_DIR" >> output.log

echo "🧪 检查 module 命令..." >> output.log
if [ -f /etc/profile.d/modules.sh ]; then
    echo "✅ modules.sh 存在，尝试 source" >> output.log
    source /etc/profile.d/modules.sh || echo "⚠️ source modules.sh 失败" >> output.log
else
    echo "❌ /etc/profile.d/modules.sh 不存在" >> output.log
fi

echo "📦 当前加载的 modules:" >> output.log
module list 2>> error.log >> output.log

echo "📥 尝试加载 CUDA 模块..." >> output.log
module purge
module load cuda/11.8 && echo "✅ 成功加载 cuda/11.8" >> output.log || echo "❌ 加载 cuda/11.8 失败" >> output.log

echo "🔍 检查 nvcc 路径:" >> output.log
which nvcc >> output.log 2>> error.log || echo "❌ nvcc 未找到" >> output.log

# 🧠 新增：手动查找 nvcc 路径并设置 CUDA_HOME
echo "📌 手动查找 nvcc 路径..." >> output.log
NVCC_PATH=$(find /vol /usr -type f -name nvcc 2>/dev/null | grep bin/nvcc | head -n 1)
if [ -n "$NVCC_PATH" ]; then
    export CUDA_HOME=$(dirname "$(dirname "$NVCC_PATH")")
    export PATH="$CUDA_HOME/bin:$PATH"
    export LD_LIBRARY_PATH="$CUDA_HOME/lib64:$LD_LIBRARY_PATH"
    echo "✅ 找到并设置 CUDA_HOME: $CUDA_HOME" >> output.log
else
    echo "❌ 未能找到 nvcc，请检查 CUDA 是否正确安装" >> output.log
fi

# 输出路径环境变量
echo "📌 PATH 环境变量:" >> output.log
echo "$PATH" >> output.log
echo "📌 LD_LIBRARY_PATH:" >> output.log
echo "$LD_LIBRARY_PATH" >> output.log

# 检查 nvcc 可用性
echo "📌 nvcc 版本检查:" >> output.log
nvcc --version >> output.log 2>> error.log || echo "❌ nvcc 无法执行" >> output.log

# 检查 nvidia-smi 是否可用
echo "📥 尝试执行 nvidia-smi:" >> output.log
nvidia-smi >> output.log 2>> error.log || echo "❌ nvidia-smi 失败" >> output.log

# 列出一些常用目录内容
echo "📁 /usr/local 内容:" >> output.log
ls -lh /usr/local >> output.log

echo "📁 /vol/cuda* 内容:" >> output.log
ls -ld /vol/cuda* >> output.log 2>> error.log || echo "⚠️ /vol/cuda* 不存在" >> output.log

# Conda 和 Python 信息
echo "📌 CONDA 信息:" >> output.log
conda info >> output.log
conda env list >> output.log

echo "🐍 Python/PIP 路径:" >> output.log
which python >> output.log
which pip >> output.log

echo "🐍 Python 版本:" >> output.log
python --version >> output.log

echo "✅ DEBUG 检查完毕。" >> output.log
