#!/bin/bash
#SBATCH --partition=a100
#SBATCH --job-name=gptq_deepseek
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --gpus-per-node=1
#SBATCH --cpus-per-task=8
#SBATCH --time=12:00:00

LOG_DIR=logs/deepseek-math-7b-instruct
OUT_LOG=$LOG_DIR/output_apptainer.log
ERR_LOG=$LOG_DIR/error_apptainer.log

#SBATCH --output=$OUT_LOG
#SBATCH --error=$ERR_LOG

# 清空日志（注意：SBATCH 变量替换在提交时完成，脚本执行时还需要显式清空）
mkdir -p "$LOG_DIR"
: > "$OUT_LOG"
: > "$ERR_LOG"


set -eEuo pipefail
trap 'echo "❌ 任务失败: 行号 $LINENO，退出码 $?"; exit 1' ERR

echo "🔍 任务开始: $(date)"
echo "📂 当前目录: $(pwd)"
cd "$SLURM_SUBMIT_DIR" || { echo "❌ 无法进入提交目录，退出"; exit 1; }

# ===== 加载 Apptainer 模块 =====
if [ -f /etc/profile.d/modules.sh ]; then
    source /etc/profile.d/modules.sh || true
    module load apptainer || echo "⚠️ 无法加载 apptainer，确保已安装"
fi

# ===== 构建镜像（仅当必要时）=====
DEF_FILE="build_apptainer/lm-compose.def"
SIF_FILE="build_apptainer/lm-compose.sif"

if [ ! -f "$SIF_FILE" ] || [ "$DEF_FILE" -nt "$SIF_FILE" ]; then
    echo "📦 构建容器镜像: $SIF_FILE"
    apptainer build --force "$SIF_FILE" "$DEF_FILE"
else
    echo "✅ 镜像已是最新: $SIF_FILE"
fi

# ===== 启动主程序 =====
MODEL_DIR="/opt/app/models/deepseek-math-7b-instruct"
OUTPUT_DIR="/opt/app/compressed_models/deepseek-math-7b-gptq"

echo "🚀 运行主程序..."
apptainer exec --nv "$SIF_FILE" bash -c "
    source /opt/conda/etc/profile.d/conda.sh &&
    conda activate lm-compose &&
    python /opt/app/main.py \
        model_name='$MODEL_DIR' \
        interventions=[compress] \
        compress=gptq \
        wbits=4 \
        output_dir='$OUTPUT_DIR'
"

echo "✅ 任务完成: $(date)"