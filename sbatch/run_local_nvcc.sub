#!/bin/bash
#SBATCH --partition=a100
#SBATCH --nodelist=aisurrey23
#SBATCH --job-name=lmcompose-gptq
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --gpus-per-node=1
#SBATCH --cpus-per-task=8
#SBATCH --time=12:00:00
#SBATCH --mem=128G
#SBATCH --output=logs/gptq_deepseek/output.log
#SBATCH --error=logs/gptq_deepseek/error.log

set -euo pipefail
trap 'echo "❌ 任务失败: 行号 $LINENO，退出码 $?"; exit 1' ERR

echo "🔍 任务开始: $(date)"
echo "📂 当前目录: $(pwd)"

cd "$SLURM_SUBMIT_DIR"

# === 配置 Conda 环境 ===
eval "$(conda shell.bash hook)"
conda activate lm-compose

# === 安装 CUDA（无 sudo）===
export CUDA_HOME=$HOME/cuda-11.8
export PATH="$CUDA_HOME/bin:$PATH"
export LD_LIBRARY_PATH="$CUDA_HOME/lib64:$LD_LIBRARY_PATH"

# 可选：首次运行时下载 CUDA Toolkit（如果未解压完成）
# wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run
# chmod +x cuda_11.8.0_520.61.05_linux.run
# ./cuda_11.8.0_520.61.05_linux.run --toolkit --silent --override --installpath=$HOME/cuda-11.8

# === 编译 AutoGPTQ（使用 nvcc）===
cd AutoGPTQ
pip install -e . || echo "❌ AutoGPTQ 安装失败"
cd ..

# === 执行压缩任务 ===
python main.py \
    model_name=models/deepseek-math-7b-instruct \
    interventions=[compress] \
    compress=gptq \
    wbits=4 \
    output_dir=compressed_models/deepseek-math-7b-gptq

echo "✅ 任务完成: $(date)"
